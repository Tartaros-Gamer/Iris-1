plugins {
    id 'java'
    id 'io.freefair.lombok' version '5.2.1'
    id "com.github.johnrengelman.shadow" version "7.0.0"
}

group 'com.volmit.iris'
version '1.5.18'
def apiVersion = '1.17'
def name = 'Iris'
def main = 'com.volmit.iris.Iris'

/*
 * Iris is a World Generator for Minecraft Bukkit Servers
 * Copyright (c) 2021 Arcane Arts (Volmit Software)
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

// ADD YOURSELF AS A NEW LINE IF YOU WANT YOUR OWN BUILD TASK GENERATED
// ==============================================================
registerCustomOutputTask('Cyberpwn', 'C://Users/cyberpwn/Documents/development/server/plugins');
registerCustomOutputTask('Psycho', 'D://Dan/MinecraftDevelopment/server/plugins');
registerCustomOutputTask('ArcaneArts', 'C://Users/arcane/Documents/development/server/plugins');
registerCustomOutputTask('Coco', 'C:/Users/sjoer/Documents/MCServer/plugins');
registerCustomOutputTask('Strange', 'D://Servers/1.17 Test Server/plugins');
// ==============================================================

def registerCustomOutputTask(name, path) {
    tasks.register('build' + name, Copy) {
        group('development')
        outputs.upToDateWhen { false }
        dependsOn ':shadowJar'
        from(file('build/libs/Iris-' + version + '-all.jar'))
        into(file(path))
        rename { String fileName ->
            fileName.replace('Iris-' + version + '-all.jar', "Iris.jar")
        }
    }
}

file(jar.archiveFile.get().getAsFile().getParentFile().getParentFile().getParentFile().getAbsolutePath() + '/build/resources/main/plugin.yml').delete()

processResources {
    filesMatching('**/plugin.yml') {
        expand(
                'name': name.toString(),
                'version': version.toString(),
                'main': main.toString(),
                'apiversion': apiVersion.toString()
        )
    }
}

repositories {
    maven {
        allowInsecureProtocol true
        url "http://archive.arcane.art/repository/arcane"
    }
    mavenLocal()
}

shadowJar
{
    append("plugin.yml")
    minimize()
    dependencies {
        include(dependency('org.zeroturnaround:zt-zip:1.14'))
        include(dependency('com.googlecode.concurrentlinkedhashmap:concurrentlinkedhashmap-lru:1.4.2'))
        include(dependency('io.papermc:paperlib:1.0.5'))
    }
}

manifest()

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'
    implementation 'org.zeroturnaround:zt-zip:1.14'
    implementation 'io.papermc:paperlib:1.0.5'
    implementation 'com.googlecode.concurrentlinkedhashmap:concurrentlinkedhashmap-lru:1.4.2'
    implementation 'org.spigotmc:spigot-api:1.17-R0.1-SNAPSHOT'
    implementation 'org.bukkit.craftbukkit:1.17:1.17'
    implementation 'org.bukkit.craftbukkit:1.17.1:1.17.1'
    implementation 'org.bukkit.craftbukkit:1.16.5:1.16.5'
    implementation 'org.bukkit.craftbukkit:1.16.3:1.16.3'
    implementation 'org.bukkit.craftbukkit:1.16.1:1.16.1'
    implementation 'com.sk89q.worldedit:worldedit-bukkit:7.2.0-SNAPSHOT'
    implementation 'io.lumine.xikage:MythicMobs:4.9.1'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'me.clip:placeholderapi:2.10.10'
}